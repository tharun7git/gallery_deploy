{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91970\\\\Desktop\\\\project\\\\frontend\\\\src\\\\components\\\\Folder\\\\PhotoGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Grid, Box, Typography, Card, Masonry } from '@mui/material';\nimport { PhotoLibrary } from '@mui/icons-material';\nimport PhotoCard from './PhotoCard';\nimport PhotoDetail from '../Photo/PhotoDetail';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PhotoGrid = ({\n  photos,\n  folderId\n}) => {\n  _s();\n  const [selectedPhoto, setSelectedPhoto] = useState(null);\n  const [detailOpen, setDetailOpen] = useState(false);\n  const handlePhotoClick = photo => {\n    setSelectedPhoto(photo);\n    setDetailOpen(true);\n  };\n  const handleDetailClose = () => {\n    setDetailOpen(false);\n    setSelectedPhoto(null);\n  };\n  if (!photos || photos.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        p: 4,\n        textAlign: 'center',\n        background: 'linear-gradient(145deg, #f8fafc, #e2e8f0)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(PhotoLibrary, {\n        sx: {\n          fontSize: 64,\n          color: 'text.secondary',\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"No photos yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: \"Upload your first photo to get started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"photo-grid\",\n        children: photos.map(photo => /*#__PURE__*/_jsxDEV(PhotoCard, {\n          photo: photo,\n          folderId: folderId,\n          onClick: () => handlePhotoClick(photo)\n        }, photo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PhotoDetail, {\n      open: detailOpen,\n      onClose: handleDetailClose,\n      photo: selectedPhoto,\n      folderId: folderId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(PhotoGrid, \"TrQvsSlq59gyXuFFZ1/WSHnNCk8=\");\n_c = PhotoGrid;\nexport default PhotoGrid;\nvar _c;\n$RefreshReg$(_c, \"PhotoGrid\");","map":{"version":3,"names":["React","useState","Grid","Box","Typography","Card","Masonry","PhotoLibrary","PhotoCard","PhotoDetail","jsxDEV","_jsxDEV","Fragment","_Fragment","PhotoGrid","photos","folderId","_s","selectedPhoto","setSelectedPhoto","detailOpen","setDetailOpen","handlePhotoClick","photo","handleDetailClose","length","sx","p","textAlign","background","children","fontSize","color","mb","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","width","className","map","onClick","id","open","onClose","_c","$RefreshReg$"],"sources":["C:/Users/91970/Desktop/project/frontend/src/components/Folder/PhotoGrid.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  Masonry,\r\n} from '@mui/material';\r\nimport { PhotoLibrary } from '@mui/icons-material';\r\nimport PhotoCard from './PhotoCard';\r\nimport PhotoDetail from '../Photo/PhotoDetail';\r\n\r\nconst PhotoGrid = ({ photos, folderId }) => {\r\n  const [selectedPhoto, setSelectedPhoto] = useState(null);\r\n  const [detailOpen, setDetailOpen] = useState(false);\r\n\r\n  const handlePhotoClick = (photo) => {\r\n    setSelectedPhoto(photo);\r\n    setDetailOpen(true);\r\n  };\r\n\r\n  const handleDetailClose = () => {\r\n    setDetailOpen(false);\r\n    setSelectedPhoto(null);\r\n  };\r\n\r\n  if (!photos || photos.length === 0) {\r\n    return (\r\n      <Card sx={{ p: 4, textAlign: 'center', background: 'linear-gradient(145deg, #f8fafc, #e2e8f0)' }}>\r\n        <PhotoLibrary sx={{ fontSize: 64, color: 'text.secondary', mb: 2 }} />\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          No photos yet\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          Upload your first photo to get started\r\n        </Typography>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ width: '100%' }}>\r\n        {/* Use CSS Grid for better responsive layout */}\r\n        <Box className=\"photo-grid\">\r\n          {photos.map((photo) => (\r\n            <PhotoCard\r\n              key={photo.id}\r\n              photo={photo}\r\n              folderId={folderId}\r\n              onClick={() => handlePhotoClick(photo)}\r\n            />\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Photo Detail Modal */}\r\n      <PhotoDetail\r\n        open={detailOpen}\r\n        onClose={handleDetailClose}\r\n        photo={selectedPhoto}\r\n        folderId={folderId}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PhotoGrid;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}