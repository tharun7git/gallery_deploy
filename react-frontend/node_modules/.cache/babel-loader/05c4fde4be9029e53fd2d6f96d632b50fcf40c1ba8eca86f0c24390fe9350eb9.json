{"ast":null,"code":"import { format, formatDistanceToNow } from 'date-fns';\nexport const formatFileSize = bytes => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\nexport const formatDate = dateString => {\n  const date = new Date(dateString);\n  return format(date, 'PPp');\n};\nexport const formatRelativeTime = dateString => {\n  const date = new Date(dateString);\n  return formatDistanceToNow(date, {\n    addSuffix: true\n  });\n};\nexport const truncateText = (text, maxLength = 50) => {\n  if (text.length <= maxLength) return text;\n  return text.substring(0, maxLength) + '...';\n};\nexport const getImageUrl = imagePath => {\n  if (!imagePath) return '';\n  if (imagePath.startsWith('http')) return imagePath;\n  return `${process.env.REACT_APP_API_BASE_URL}${imagePath}`;\n};\nexport const validateEmail = email => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\nexport const validatePassword = password => {\n  return password.length >= 8;\n};\nexport const generateId = () => {\n  return Math.random().toString(36).substr(2, 9);\n};\nexport const debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\nexport const isImageFile = file => {\n  return file.type.startsWith('image/');\n};\nexport const getFileExtension = filename => {\n  return filename.split('.').pop().toLowerCase();\n};\nexport const handleError = error => {\n  console.error('Error:', error);\n  if (error.response) {\n    var _error$response$data, _error$response$data2;\n    // Server responded with error status\n    return ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || ((_error$response$data2 = error.response.data) === null || _error$response$data2 === void 0 ? void 0 : _error$response$data2.message) || 'Server error';\n  } else if (error.request) {\n    // Request was made but no response received\n    return 'Network error. Please check your connection.';\n  } else {\n    // Something else happened\n    return error.message || 'An unexpected error occurred';\n  }\n};","map":{"version":3,"names":["format","formatDistanceToNow","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatDate","dateString","date","Date","formatRelativeTime","addSuffix","truncateText","text","maxLength","length","substring","getImageUrl","imagePath","startsWith","process","env","REACT_APP_API_BASE_URL","validateEmail","email","emailRegex","test","validatePassword","password","generateId","random","toString","substr","debounce","func","wait","timeout","executedFunction","args","later","clearTimeout","setTimeout","isImageFile","file","type","getFileExtension","filename","split","pop","toLowerCase","handleError","error","console","response","_error$response$data","_error$response$data2","data","detail","message","request"],"sources":["C:/Users/91970/Desktop/project/frontend/src/utils/helpers.js"],"sourcesContent":["import { format, formatDistanceToNow } from 'date-fns';\r\n\r\nexport const formatFileSize = (bytes) => {\r\n  if (bytes === 0) return '0 Bytes';\r\n  const k = 1024;\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n};\r\n\r\nexport const formatDate = (dateString) => {\r\n  const date = new Date(dateString);\r\n  return format(date, 'PPp');\r\n};\r\n\r\nexport const formatRelativeTime = (dateString) => {\r\n  const date = new Date(dateString);\r\n  return formatDistanceToNow(date, { addSuffix: true });\r\n};\r\n\r\nexport const truncateText = (text, maxLength = 50) => {\r\n  if (text.length <= maxLength) return text;\r\n  return text.substring(0, maxLength) + '...';\r\n};\r\n\r\nexport const getImageUrl = (imagePath) => {\r\n  if (!imagePath) return '';\r\n  if (imagePath.startsWith('http')) return imagePath;\r\n  return `${process.env.REACT_APP_API_BASE_URL}${imagePath}`;\r\n};\r\n\r\nexport const validateEmail = (email) => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return emailRegex.test(email);\r\n};\r\n\r\nexport const validatePassword = (password) => {\r\n  return password.length >= 8;\r\n};\r\n\r\nexport const generateId = () => {\r\n  return Math.random().toString(36).substr(2, 9);\r\n};\r\n\r\nexport const debounce = (func, wait) => {\r\n  let timeout;\r\n  return function executedFunction(...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n};\r\n\r\nexport const isImageFile = (file) => {\r\n  return file.type.startsWith('image/');\r\n};\r\n\r\nexport const getFileExtension = (filename) => {\r\n  return filename.split('.').pop().toLowerCase();\r\n};\r\n\r\nexport const handleError = (error) => {\r\n  console.error('Error:', error);\r\n  \r\n  if (error.response) {\r\n    // Server responded with error status\r\n    return error.response.data?.detail || error.response.data?.message || 'Server error';\r\n  } else if (error.request) {\r\n    // Request was made but no response received\r\n    return 'Network error. Please check your connection.';\r\n  } else {\r\n    // Something else happened\r\n    return error.message || 'An unexpected error occurred';\r\n  }\r\n};"],"mappings":"AAAA,SAASA,MAAM,EAAEC,mBAAmB,QAAQ,UAAU;AAEtD,OAAO,MAAMC,cAAc,GAAIC,KAAK,IAAK;EACvC,IAAIA,KAAK,KAAK,CAAC,EAAE,OAAO,SAAS;EACjC,MAAMC,CAAC,GAAG,IAAI;EACd,MAAMC,KAAK,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;EACzC,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACN,KAAK,CAAC,GAAGI,IAAI,CAACE,GAAG,CAACL,CAAC,CAAC,CAAC;EACnD,OAAOM,UAAU,CAAC,CAACP,KAAK,GAAGI,IAAI,CAACI,GAAG,CAACP,CAAC,EAAEE,CAAC,CAAC,EAAEM,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGP,KAAK,CAACC,CAAC,CAAC;AACzE,CAAC;AAED,OAAO,MAAMO,UAAU,GAAIC,UAAU,IAAK;EACxC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;EACjC,OAAOd,MAAM,CAACe,IAAI,EAAE,KAAK,CAAC;AAC5B,CAAC;AAED,OAAO,MAAME,kBAAkB,GAAIH,UAAU,IAAK;EAChD,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;EACjC,OAAOb,mBAAmB,CAACc,IAAI,EAAE;IAAEG,SAAS,EAAE;EAAK,CAAC,CAAC;AACvD,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGA,CAACC,IAAI,EAAEC,SAAS,GAAG,EAAE,KAAK;EACpD,IAAID,IAAI,CAACE,MAAM,IAAID,SAAS,EAAE,OAAOD,IAAI;EACzC,OAAOA,IAAI,CAACG,SAAS,CAAC,CAAC,EAAEF,SAAS,CAAC,GAAG,KAAK;AAC7C,CAAC;AAED,OAAO,MAAMG,WAAW,GAAIC,SAAS,IAAK;EACxC,IAAI,CAACA,SAAS,EAAE,OAAO,EAAE;EACzB,IAAIA,SAAS,CAACC,UAAU,CAAC,MAAM,CAAC,EAAE,OAAOD,SAAS;EAClD,OAAO,GAAGE,OAAO,CAACC,GAAG,CAACC,sBAAsB,GAAGJ,SAAS,EAAE;AAC5D,CAAC;AAED,OAAO,MAAMK,aAAa,GAAIC,KAAK,IAAK;EACtC,MAAMC,UAAU,GAAG,4BAA4B;EAC/C,OAAOA,UAAU,CAACC,IAAI,CAACF,KAAK,CAAC;AAC/B,CAAC;AAED,OAAO,MAAMG,gBAAgB,GAAIC,QAAQ,IAAK;EAC5C,OAAOA,QAAQ,CAACb,MAAM,IAAI,CAAC;AAC7B,CAAC;AAED,OAAO,MAAMc,UAAU,GAAGA,CAAA,KAAM;EAC9B,OAAO7B,IAAI,CAAC8B,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;AAChD,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAACC,IAAI,EAAEC,IAAI,KAAK;EACtC,IAAIC,OAAO;EACX,OAAO,SAASC,gBAAgBA,CAAC,GAAGC,IAAI,EAAE;IACxC,MAAMC,KAAK,GAAGA,CAAA,KAAM;MAClBC,YAAY,CAACJ,OAAO,CAAC;MACrBF,IAAI,CAAC,GAAGI,IAAI,CAAC;IACf,CAAC;IACDE,YAAY,CAACJ,OAAO,CAAC;IACrBA,OAAO,GAAGK,UAAU,CAACF,KAAK,EAAEJ,IAAI,CAAC;EACnC,CAAC;AACH,CAAC;AAED,OAAO,MAAMO,WAAW,GAAIC,IAAI,IAAK;EACnC,OAAOA,IAAI,CAACC,IAAI,CAACzB,UAAU,CAAC,QAAQ,CAAC;AACvC,CAAC;AAED,OAAO,MAAM0B,gBAAgB,GAAIC,QAAQ,IAAK;EAC5C,OAAOA,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;AAChD,CAAC;AAED,OAAO,MAAMC,WAAW,GAAIC,KAAK,IAAK;EACpCC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAE9B,IAAIA,KAAK,CAACE,QAAQ,EAAE;IAAA,IAAAC,oBAAA,EAAAC,qBAAA;IAClB;IACA,OAAO,EAAAD,oBAAA,GAAAH,KAAK,CAACE,QAAQ,CAACG,IAAI,cAAAF,oBAAA,uBAAnBA,oBAAA,CAAqBG,MAAM,OAAAF,qBAAA,GAAIJ,KAAK,CAACE,QAAQ,CAACG,IAAI,cAAAD,qBAAA,uBAAnBA,qBAAA,CAAqBG,OAAO,KAAI,cAAc;EACtF,CAAC,MAAM,IAAIP,KAAK,CAACQ,OAAO,EAAE;IACxB;IACA,OAAO,8CAA8C;EACvD,CAAC,MAAM;IACL;IACA,OAAOR,KAAK,CAACO,OAAO,IAAI,8BAA8B;EACxD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}