{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91970\\\\Desktop\\\\project\\\\frontend\\\\src\\\\components\\\\Folder\\\\PhotoUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Box, Typography, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton, LinearProgress, Alert, Chip, Paper } from '@mui/material';\nimport { CloudUpload, Delete, PhotoLibrary, CheckCircle, Error as ErrorIcon } from '@mui/icons-material';\nimport { usePhotos } from '../../contexts/PhotoContext';\nimport { formatFileSize, isImageFile } from '../../utils/helpers';\nimport { validatePhotoUpload } from '../../utils/validation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhotoUpload = ({\n  open,\n  onClose,\n  folderId,\n  folderName\n}) => {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const [uploadResults, setUploadResults] = useState([]);\n  const [error, setError] = useState('');\n  const {\n    uploadPhoto\n  } = usePhotos();\n  const onDrop = useCallback((acceptedFiles, rejectedFiles) => {\n    setError('');\n\n    // Handle rejected files\n    if (rejectedFiles.length > 0) {\n      const errorMessages = rejectedFiles.map(({\n        file,\n        errors\n      }) => {\n        const errorTexts = errors.map(error => {\n          switch (error.code) {\n            case 'file-too-large':\n              return 'File is too large (max 10MB)';\n            case 'file-invalid-type':\n              return 'Only image files are allowed';\n            default:\n              return error.message;\n          }\n        });\n        return `${file.name}: ${errorTexts.join(', ')}`;\n      });\n      setError(errorMessages.join('\\n'));\n    }\n\n    // Add accepted files\n    const newFiles = acceptedFiles.map(file => ({\n      id: Math.random().toString(36).substr(2, 9),\n      file,\n      name: file.name,\n      size: file.size,\n      preview: URL.createObjectURL(file),\n      status: 'pending',\n      // pending, uploading, success, error\n      error: null\n    }));\n    setSelectedFiles(prev => [...prev, ...newFiles]);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'image/*': ['.jpeg', '.jpg', '.png', '.gif', '.webp']\n    },\n    maxSize: 10 * 1024 * 1024,\n    // 10MB\n    multiple: true\n  });\n  const removeFile = fileId => {\n    setSelectedFiles(prev => {\n      const updated = prev.filter(f => f.id !== fileId);\n      // Revoke object URL to prevent memory leaks\n      const removedFile = prev.find(f => f.id === fileId);\n      if (removedFile !== null && removedFile !== void 0 && removedFile.preview) {\n        URL.revokeObjectURL(removedFile.preview);\n      }\n      return updated;\n    });\n  };\n  const uploadFiles = async () => {\n    if (selectedFiles.length === 0) return;\n    setUploading(true);\n    setUploadResults([]);\n    setError('');\n    const results = [];\n    for (let i = 0; i < selectedFiles.length; i++) {\n      const fileData = selectedFiles[i];\n\n      // Update file status to uploading\n      setSelectedFiles(prev => prev.map(f => f.id === fileData.id ? {\n        ...f,\n        status: 'uploading'\n      } : f));\n      try {\n        const result = await uploadPhoto(folderId, fileData.file, fileData.name);\n        if (result.success) {\n          setSelectedFiles(prev => prev.map(f => f.id === fileData.id ? {\n            ...f,\n            status: 'success'\n          } : f));\n          results.push({\n            ...fileData,\n            status: 'success'\n          });\n        } else {\n          setSelectedFiles(prev => prev.map(f => f.id === fileData.id ? {\n            ...f,\n            status: 'error',\n            error: result.error\n          } : f));\n          results.push({\n            ...fileData,\n            status: 'error',\n            error: result.error\n          });\n        }\n      } catch (error) {\n        setSelectedFiles(prev => prev.map(f => f.id === fileData.id ? {\n          ...f,\n          status: 'error',\n          error: 'Upload failed'\n        } : f));\n        results.push({\n          ...fileData,\n          status: 'error',\n          error: 'Upload failed'\n        });\n      }\n\n      // Update progress\n      setUploadProgress({\n        completed: i + 1,\n        total: selectedFiles.length\n      });\n    }\n    setUploadResults(results);\n    setUploading(false);\n\n    // Auto close if all uploads successful\n    const hasErrors = results.some(r => r.status === 'error');\n    if (!hasErrors) {\n      setTimeout(() => {\n        handleClose();\n      }, 2000);\n    }\n  };\n  const handleClose = () => {\n    if (!uploading) {\n      // Clean up object URLs\n      selectedFiles.forEach(file => {\n        if (file.preview) {\n          URL.revokeObjectURL(file.preview);\n        }\n      });\n      setSelectedFiles([]);\n      setUploadProgress({});\n      setUploadResults([]);\n      setError('');\n      onClose();\n    }\n  };\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'success':\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          color: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 16\n        }, this);\n      case 'error':\n        return /*#__PURE__*/_jsxDEV(ErrorIcon, {\n          color: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 16\n        }, this);\n      case 'uploading':\n        return /*#__PURE__*/_jsxDEV(LinearProgress, {\n          sx: {\n            width: 20,\n            height: 20\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(PhotoLibrary, {\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'success':\n        return 'success';\n      case 'error':\n        return 'error';\n      case 'uploading':\n        return 'primary';\n      default:\n        return 'default';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleClose,\n    maxWidth: \"md\",\n    fullWidth: true,\n    PaperProps: {\n      sx: {\n        borderRadius: 3,\n        minHeight: 500\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(CloudUpload, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"span\",\n          children: [\"Upload Photos to \\\"\", folderName, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2,\n          borderRadius: 2\n        },\n        children: error.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: line\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), uploading && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          gutterBottom: true,\n          children: [\"Uploading \", uploadProgress.completed, \" of \", uploadProgress.total, \" files...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n          variant: \"determinate\",\n          value: uploadProgress.completed / uploadProgress.total * 100,\n          sx: {\n            height: 8,\n            borderRadius: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), !uploading && /*#__PURE__*/_jsxDEV(Paper, {\n        ...getRootProps(),\n        className: `photo-upload-dropzone ${isDragActive ? 'drag-active' : ''}`,\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CloudUpload, {\n          sx: {\n            fontSize: 48,\n            color: 'primary.main',\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: isDragActive ? 'Drop photos here' : 'Drag & drop photos here'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          paragraph: true,\n          children: \"or click to select files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 1,\n            flexWrap: 'wrap',\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            label: \"JPG\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            label: \"PNG\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            label: \"GIF\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            label: \"WebP\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"text.secondary\",\n          sx: {\n            mt: 1,\n            display: 'block'\n          },\n          children: \"Maximum file size: 10MB per image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [\"Selected Files (\", selectedFiles.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            maxHeight: 300,\n            overflow: 'auto'\n          },\n          children: selectedFiles.map(fileData => /*#__PURE__*/_jsxDEV(ListItem, {\n            sx: {\n              border: 1,\n              borderColor: 'divider',\n              borderRadius: 2,\n              mb: 1,\n              bgcolor: fileData.status === 'success' ? 'success.light' : fileData.status === 'error' ? 'error.light' : 'transparent'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mr: 2\n              },\n              children: getStatusIcon(fileData.status)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: fileData.name,\n              secondary: /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  children: formatFileSize(fileData.size)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 25\n                }, this), fileData.error && /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"error\",\n                  display: \"block\",\n                  children: fileData.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                label: fileData.status,\n                size: \"small\",\n                color: getStatusColor(fileData.status),\n                sx: {\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 21\n              }, this), !uploading && fileData.status !== 'success' && /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                \"aria-label\": \"delete\",\n                onClick: () => removeFile(fileData.id),\n                size: \"small\",\n                children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 19\n            }, this)]\n          }, fileData.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      sx: {\n        p: 3,\n        gap: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        variant: \"outlined\",\n        disabled: uploading,\n        sx: {\n          borderRadius: 2\n        },\n        children: uploadResults.length > 0 && !uploading ? 'Close' : 'Cancel'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: uploadFiles,\n        variant: \"contained\",\n        disabled: selectedFiles.length === 0 || uploading,\n        sx: {\n          borderRadius: 2,\n          background: 'linear-gradient(45deg, #667eea, #764ba2)'\n        },\n        children: uploading ? `Uploading...` : `Upload ${selectedFiles.length} Files`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n_s(PhotoUpload, \"zN2ZTMIa11TsII5na1pFI1fFlrw=\", false, function () {\n  return [usePhotos, useDropzone];\n});\n_c = PhotoUpload;\nexport default PhotoUpload;\nvar _c;\n$RefreshReg$(_c, \"PhotoUpload\");","map":{"version":3,"names":["React","useState","useCallback","useDropzone","Dialog","DialogTitle","DialogContent","DialogActions","Button","Box","Typography","List","ListItem","ListItemText","ListItemSecondaryAction","IconButton","LinearProgress","Alert","Chip","Paper","CloudUpload","Delete","PhotoLibrary","CheckCircle","Error","ErrorIcon","usePhotos","formatFileSize","isImageFile","validatePhotoUpload","jsxDEV","_jsxDEV","PhotoUpload","open","onClose","folderId","folderName","_s","selectedFiles","setSelectedFiles","uploading","setUploading","uploadProgress","setUploadProgress","uploadResults","setUploadResults","error","setError","uploadPhoto","onDrop","acceptedFiles","rejectedFiles","length","errorMessages","map","file","errors","errorTexts","code","message","name","join","newFiles","id","Math","random","toString","substr","size","preview","URL","createObjectURL","status","prev","getRootProps","getInputProps","isDragActive","accept","maxSize","multiple","removeFile","fileId","updated","filter","f","removedFile","find","revokeObjectURL","uploadFiles","results","i","fileData","result","success","push","completed","total","hasErrors","some","r","setTimeout","handleClose","forEach","getStatusIcon","color","fileName","_jsxFileName","lineNumber","columnNumber","sx","width","height","getStatusColor","maxWidth","fullWidth","PaperProps","borderRadius","minHeight","children","display","alignItems","gap","variant","component","severity","mb","split","line","index","gutterBottom","value","className","fontSize","paragraph","flexWrap","justifyContent","label","mt","maxHeight","overflow","border","borderColor","bgcolor","mr","primary","secondary","edge","onClick","p","disabled","background","_c","$RefreshReg$"],"sources":["C:/Users/91970/Desktop/project/frontend/src/components/Folder/PhotoUpload.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Box,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  LinearProgress,\r\n  Alert,\r\n  Chip,\r\n  Paper,\r\n} from '@mui/material';\r\nimport {\r\n  CloudUpload,\r\n  Delete,\r\n  PhotoLibrary,\r\n  CheckCircle,\r\n  Error as ErrorIcon,\r\n} from '@mui/icons-material';\r\nimport { usePhotos } from '../../contexts/PhotoContext';\r\nimport { formatFileSize, isImageFile } from '../../utils/helpers';\r\nimport { validatePhotoUpload } from '../../utils/validation';\r\n\r\nconst PhotoUpload = ({ open, onClose, folderId, folderName }) => {\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [uploadProgress, setUploadProgress] = useState({});\r\n  const [uploadResults, setUploadResults] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  const { uploadPhoto } = usePhotos();\r\n\r\n  const onDrop = useCallback((acceptedFiles, rejectedFiles) => {\r\n    setError('');\r\n    \r\n    // Handle rejected files\r\n    if (rejectedFiles.length > 0) {\r\n      const errorMessages = rejectedFiles.map(({ file, errors }) => {\r\n        const errorTexts = errors.map(error => {\r\n          switch (error.code) {\r\n            case 'file-too-large':\r\n              return 'File is too large (max 10MB)';\r\n            case 'file-invalid-type':\r\n              return 'Only image files are allowed';\r\n            default:\r\n              return error.message;\r\n          }\r\n        });\r\n        return `${file.name}: ${errorTexts.join(', ')}`;\r\n      });\r\n      setError(errorMessages.join('\\n'));\r\n    }\r\n\r\n    // Add accepted files\r\n    const newFiles = acceptedFiles.map(file => ({\r\n      id: Math.random().toString(36).substr(2, 9),\r\n      file,\r\n      name: file.name,\r\n      size: file.size,\r\n      preview: URL.createObjectURL(file),\r\n      status: 'pending', // pending, uploading, success, error\r\n      error: null,\r\n    }));\r\n\r\n    setSelectedFiles(prev => [...prev, ...newFiles]);\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: {\r\n      'image/*': ['.jpeg', '.jpg', '.png', '.gif', '.webp']\r\n    },\r\n    maxSize: 10 * 1024 * 1024, // 10MB\r\n    multiple: true,\r\n  });\r\n\r\n  const removeFile = (fileId) => {\r\n    setSelectedFiles(prev => {\r\n      const updated = prev.filter(f => f.id !== fileId);\r\n      // Revoke object URL to prevent memory leaks\r\n      const removedFile = prev.find(f => f.id === fileId);\r\n      if (removedFile?.preview) {\r\n        URL.revokeObjectURL(removedFile.preview);\r\n      }\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  const uploadFiles = async () => {\r\n    if (selectedFiles.length === 0) return;\r\n\r\n    setUploading(true);\r\n    setUploadResults([]);\r\n    setError('');\r\n\r\n    const results = [];\r\n\r\n    for (let i = 0; i < selectedFiles.length; i++) {\r\n      const fileData = selectedFiles[i];\r\n      \r\n      // Update file status to uploading\r\n      setSelectedFiles(prev => prev.map(f => \r\n        f.id === fileData.id ? { ...f, status: 'uploading' } : f\r\n      ));\r\n\r\n      try {\r\n        const result = await uploadPhoto(folderId, fileData.file, fileData.name);\r\n        \r\n        if (result.success) {\r\n          setSelectedFiles(prev => prev.map(f => \r\n            f.id === fileData.id ? { ...f, status: 'success' } : f\r\n          ));\r\n          results.push({ ...fileData, status: 'success' });\r\n        } else {\r\n          setSelectedFiles(prev => prev.map(f => \r\n            f.id === fileData.id ? { ...f, status: 'error', error: result.error } : f\r\n          ));\r\n          results.push({ ...fileData, status: 'error', error: result.error });\r\n        }\r\n      } catch (error) {\r\n        setSelectedFiles(prev => prev.map(f => \r\n          f.id === fileData.id ? { ...f, status: 'error', error: 'Upload failed' } : f\r\n        ));\r\n        results.push({ ...fileData, status: 'error', error: 'Upload failed' });\r\n      }\r\n\r\n      // Update progress\r\n      setUploadProgress({ completed: i + 1, total: selectedFiles.length });\r\n    }\r\n\r\n    setUploadResults(results);\r\n    setUploading(false);\r\n\r\n    // Auto close if all uploads successful\r\n    const hasErrors = results.some(r => r.status === 'error');\r\n    if (!hasErrors) {\r\n      setTimeout(() => {\r\n        handleClose();\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    if (!uploading) {\r\n      // Clean up object URLs\r\n      selectedFiles.forEach(file => {\r\n        if (file.preview) {\r\n          URL.revokeObjectURL(file.preview);\r\n        }\r\n      });\r\n      \r\n      setSelectedFiles([]);\r\n      setUploadProgress({});\r\n      setUploadResults([]);\r\n      setError('');\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status) => {\r\n    switch (status) {\r\n      case 'success':\r\n        return <CheckCircle color=\"success\" />;\r\n      case 'error':\r\n        return <ErrorIcon color=\"error\" />;\r\n      case 'uploading':\r\n        return <LinearProgress sx={{ width: 20, height: 20 }} />;\r\n      default:\r\n        return <PhotoLibrary color=\"action\" />;\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'success':\r\n        return 'success';\r\n      case 'error':\r\n        return 'error';\r\n      case 'uploading':\r\n        return 'primary';\r\n      default:\r\n        return 'default';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n      PaperProps={{\r\n        sx: { borderRadius: 3, minHeight: 500 },\r\n      }}\r\n    >\r\n      <DialogTitle>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n          <CloudUpload color=\"primary\" />\r\n          <Typography variant=\"h6\" component=\"span\">\r\n            Upload Photos to \"{folderName}\"\r\n          </Typography>\r\n        </Box>\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n        {/* Error Alert */}\r\n        {error && (\r\n          <Alert severity=\"error\" sx={{ mb: 2, borderRadius: 2 }}>\r\n            {error.split('\\n').map((line, index) => (\r\n              <div key={index}>{line}</div>\r\n            ))}\r\n          </Alert>\r\n        )}\r\n\r\n        {/* Upload Progress */}\r\n        {uploading && (\r\n          <Box sx={{ mb: 2 }}>\r\n            <Typography variant=\"body2\" gutterBottom>\r\n              Uploading {uploadProgress.completed} of {uploadProgress.total} files...\r\n            </Typography>\r\n            <LinearProgress\r\n              variant=\"determinate\"\r\n              value={(uploadProgress.completed / uploadProgress.total) * 100}\r\n              sx={{ height: 8, borderRadius: 4 }}\r\n            />\r\n          </Box>\r\n        )}\r\n\r\n        {/* Dropzone */}\r\n        {!uploading && (\r\n          <Paper\r\n            {...getRootProps()}\r\n            className={`photo-upload-dropzone ${isDragActive ? 'drag-active' : ''}`}\r\n            sx={{ mb: 3 }}\r\n          >\r\n            <input {...getInputProps()} />\r\n            <CloudUpload sx={{ fontSize: 48, color: 'primary.main', mb: 2 }} />\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              {isDragActive ? 'Drop photos here' : 'Drag & drop photos here'}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\r\n              or click to select files\r\n            </Typography>\r\n            <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap', justifyContent: 'center' }}>\r\n              <Chip label=\"JPG\" size=\"small\" />\r\n              <Chip label=\"PNG\" size=\"small\" />\r\n              <Chip label=\"GIF\" size=\"small\" />\r\n              <Chip label=\"WebP\" size=\"small\" />\r\n            </Box>\r\n            <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 1, display: 'block' }}>\r\n              Maximum file size: 10MB per image\r\n            </Typography>\r\n          </Paper>\r\n        )}\r\n\r\n        {/* Selected Files List */}\r\n        {selectedFiles.length > 0 && (\r\n          <Box>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Selected Files ({selectedFiles.length})\r\n            </Typography>\r\n            <List sx={{ maxHeight: 300, overflow: 'auto' }}>\r\n              {selectedFiles.map((fileData) => (\r\n                <ListItem\r\n                  key={fileData.id}\r\n                  sx={{\r\n                    border: 1,\r\n                    borderColor: 'divider',\r\n                    borderRadius: 2,\r\n                    mb: 1,\r\n                    bgcolor: fileData.status === 'success' ? 'success.light' : \r\n                             fileData.status === 'error' ? 'error.light' : 'transparent',\r\n                  }}\r\n                >\r\n                  <Box sx={{ mr: 2 }}>\r\n                    {getStatusIcon(fileData.status)}\r\n                  </Box>\r\n                  <ListItemText\r\n                    primary={fileData.name}\r\n                    secondary={\r\n                      <Box>\r\n                        <Typography variant=\"caption\">\r\n                          {formatFileSize(fileData.size)}\r\n                        </Typography>\r\n                        {fileData.error && (\r\n                          <Typography variant=\"caption\" color=\"error\" display=\"block\">\r\n                            {fileData.error}\r\n                          </Typography>\r\n                        )}\r\n                      </Box>\r\n                    }\r\n                  />\r\n                  <ListItemSecondaryAction>\r\n                    <Chip\r\n                      label={fileData.status}\r\n                      size=\"small\"\r\n                      color={getStatusColor(fileData.status)}\r\n                      sx={{ mr: 1 }}\r\n                    />\r\n                    {!uploading && fileData.status !== 'success' && (\r\n                      <IconButton\r\n                        edge=\"end\"\r\n                        aria-label=\"delete\"\r\n                        onClick={() => removeFile(fileData.id)}\r\n                        size=\"small\"\r\n                      >\r\n                        <Delete />\r\n                      </IconButton>\r\n                    )}\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        )}\r\n      </DialogContent>\r\n\r\n      <DialogActions sx={{ p: 3, gap: 1 }}>\r\n        <Button\r\n          onClick={handleClose}\r\n          variant=\"outlined\"\r\n          disabled={uploading}\r\n          sx={{ borderRadius: 2 }}\r\n        >\r\n          {uploadResults.length > 0 && !uploading ? 'Close' : 'Cancel'}\r\n        </Button>\r\n        <Button\r\n          onClick={uploadFiles}\r\n          variant=\"contained\"\r\n          disabled={selectedFiles.length === 0 || uploading}\r\n          sx={{\r\n            borderRadius: 2,\r\n            background: 'linear-gradient(45deg, #667eea, #764ba2)',\r\n          }}\r\n        >\r\n          {uploading ? `Uploading...` : `Upload ${selectedFiles.length} Files`}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default PhotoUpload;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SACEC,MAAM,EACNC,WAAW,EACXC,aAAa,EACbC,aAAa,EACbC,MAAM,EACNC,GAAG,EACHC,UAAU,EACVC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,uBAAuB,EACvBC,UAAU,EACVC,cAAc,EACdC,KAAK,EACLC,IAAI,EACJC,KAAK,QACA,eAAe;AACtB,SACEC,WAAW,EACXC,MAAM,EACNC,YAAY,EACZC,WAAW,EACXC,KAAK,IAAIC,SAAS,QACb,qBAAqB;AAC5B,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,cAAc,EAAEC,WAAW,QAAQ,qBAAqB;AACjE,SAASC,mBAAmB,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,WAAW,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,QAAQ;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC/D,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACuC,SAAS,EAAEC,YAAY,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACyC,cAAc,EAAEC,iBAAiB,CAAC,GAAG1C,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAAC2C,aAAa,EAAEC,gBAAgB,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC6C,KAAK,EAAEC,QAAQ,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM;IAAE+C;EAAY,CAAC,GAAGtB,SAAS,CAAC,CAAC;EAEnC,MAAMuB,MAAM,GAAG/C,WAAW,CAAC,CAACgD,aAAa,EAAEC,aAAa,KAAK;IAC3DJ,QAAQ,CAAC,EAAE,CAAC;;IAEZ;IACA,IAAII,aAAa,CAACC,MAAM,GAAG,CAAC,EAAE;MAC5B,MAAMC,aAAa,GAAGF,aAAa,CAACG,GAAG,CAAC,CAAC;QAAEC,IAAI;QAAEC;MAAO,CAAC,KAAK;QAC5D,MAAMC,UAAU,GAAGD,MAAM,CAACF,GAAG,CAACR,KAAK,IAAI;UACrC,QAAQA,KAAK,CAACY,IAAI;YAChB,KAAK,gBAAgB;cACnB,OAAO,8BAA8B;YACvC,KAAK,mBAAmB;cACtB,OAAO,8BAA8B;YACvC;cACE,OAAOZ,KAAK,CAACa,OAAO;UACxB;QACF,CAAC,CAAC;QACF,OAAO,GAAGJ,IAAI,CAACK,IAAI,KAAKH,UAAU,CAACI,IAAI,CAAC,IAAI,CAAC,EAAE;MACjD,CAAC,CAAC;MACFd,QAAQ,CAACM,aAAa,CAACQ,IAAI,CAAC,IAAI,CAAC,CAAC;IACpC;;IAEA;IACA,MAAMC,QAAQ,GAAGZ,aAAa,CAACI,GAAG,CAACC,IAAI,KAAK;MAC1CQ,EAAE,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;MAC3CZ,IAAI;MACJK,IAAI,EAAEL,IAAI,CAACK,IAAI;MACfQ,IAAI,EAAEb,IAAI,CAACa,IAAI;MACfC,OAAO,EAAEC,GAAG,CAACC,eAAe,CAAChB,IAAI,CAAC;MAClCiB,MAAM,EAAE,SAAS;MAAE;MACnB1B,KAAK,EAAE;IACT,CAAC,CAAC,CAAC;IAEHP,gBAAgB,CAACkC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE,GAAGX,QAAQ,CAAC,CAAC;EAClD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM;IAAEY,YAAY;IAAEC,aAAa;IAAEC;EAAa,CAAC,GAAGzE,WAAW,CAAC;IAChE8C,MAAM;IACN4B,MAAM,EAAE;MACN,SAAS,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO;IACtD,CAAC;IACDC,OAAO,EAAE,EAAE,GAAG,IAAI,GAAG,IAAI;IAAE;IAC3BC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,UAAU,GAAIC,MAAM,IAAK;IAC7B1C,gBAAgB,CAACkC,IAAI,IAAI;MACvB,MAAMS,OAAO,GAAGT,IAAI,CAACU,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACrB,EAAE,KAAKkB,MAAM,CAAC;MACjD;MACA,MAAMI,WAAW,GAAGZ,IAAI,CAACa,IAAI,CAACF,CAAC,IAAIA,CAAC,CAACrB,EAAE,KAAKkB,MAAM,CAAC;MACnD,IAAII,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAEhB,OAAO,EAAE;QACxBC,GAAG,CAACiB,eAAe,CAACF,WAAW,CAAChB,OAAO,CAAC;MAC1C;MACA,OAAOa,OAAO;IAChB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMM,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIlD,aAAa,CAACc,MAAM,KAAK,CAAC,EAAE;IAEhCX,YAAY,CAAC,IAAI,CAAC;IAClBI,gBAAgB,CAAC,EAAE,CAAC;IACpBE,QAAQ,CAAC,EAAE,CAAC;IAEZ,MAAM0C,OAAO,GAAG,EAAE;IAElB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGpD,aAAa,CAACc,MAAM,EAAEsC,CAAC,EAAE,EAAE;MAC7C,MAAMC,QAAQ,GAAGrD,aAAa,CAACoD,CAAC,CAAC;;MAEjC;MACAnD,gBAAgB,CAACkC,IAAI,IAAIA,IAAI,CAACnB,GAAG,CAAC8B,CAAC,IACjCA,CAAC,CAACrB,EAAE,KAAK4B,QAAQ,CAAC5B,EAAE,GAAG;QAAE,GAAGqB,CAAC;QAAEZ,MAAM,EAAE;MAAY,CAAC,GAAGY,CACzD,CAAC,CAAC;MAEF,IAAI;QACF,MAAMQ,MAAM,GAAG,MAAM5C,WAAW,CAACb,QAAQ,EAAEwD,QAAQ,CAACpC,IAAI,EAAEoC,QAAQ,CAAC/B,IAAI,CAAC;QAExE,IAAIgC,MAAM,CAACC,OAAO,EAAE;UAClBtD,gBAAgB,CAACkC,IAAI,IAAIA,IAAI,CAACnB,GAAG,CAAC8B,CAAC,IACjCA,CAAC,CAACrB,EAAE,KAAK4B,QAAQ,CAAC5B,EAAE,GAAG;YAAE,GAAGqB,CAAC;YAAEZ,MAAM,EAAE;UAAU,CAAC,GAAGY,CACvD,CAAC,CAAC;UACFK,OAAO,CAACK,IAAI,CAAC;YAAE,GAAGH,QAAQ;YAAEnB,MAAM,EAAE;UAAU,CAAC,CAAC;QAClD,CAAC,MAAM;UACLjC,gBAAgB,CAACkC,IAAI,IAAIA,IAAI,CAACnB,GAAG,CAAC8B,CAAC,IACjCA,CAAC,CAACrB,EAAE,KAAK4B,QAAQ,CAAC5B,EAAE,GAAG;YAAE,GAAGqB,CAAC;YAAEZ,MAAM,EAAE,OAAO;YAAE1B,KAAK,EAAE8C,MAAM,CAAC9C;UAAM,CAAC,GAAGsC,CAC1E,CAAC,CAAC;UACFK,OAAO,CAACK,IAAI,CAAC;YAAE,GAAGH,QAAQ;YAAEnB,MAAM,EAAE,OAAO;YAAE1B,KAAK,EAAE8C,MAAM,CAAC9C;UAAM,CAAC,CAAC;QACrE;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdP,gBAAgB,CAACkC,IAAI,IAAIA,IAAI,CAACnB,GAAG,CAAC8B,CAAC,IACjCA,CAAC,CAACrB,EAAE,KAAK4B,QAAQ,CAAC5B,EAAE,GAAG;UAAE,GAAGqB,CAAC;UAAEZ,MAAM,EAAE,OAAO;UAAE1B,KAAK,EAAE;QAAgB,CAAC,GAAGsC,CAC7E,CAAC,CAAC;QACFK,OAAO,CAACK,IAAI,CAAC;UAAE,GAAGH,QAAQ;UAAEnB,MAAM,EAAE,OAAO;UAAE1B,KAAK,EAAE;QAAgB,CAAC,CAAC;MACxE;;MAEA;MACAH,iBAAiB,CAAC;QAAEoD,SAAS,EAAEL,CAAC,GAAG,CAAC;QAAEM,KAAK,EAAE1D,aAAa,CAACc;MAAO,CAAC,CAAC;IACtE;IAEAP,gBAAgB,CAAC4C,OAAO,CAAC;IACzBhD,YAAY,CAAC,KAAK,CAAC;;IAEnB;IACA,MAAMwD,SAAS,GAAGR,OAAO,CAACS,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC3B,MAAM,KAAK,OAAO,CAAC;IACzD,IAAI,CAACyB,SAAS,EAAE;MACdG,UAAU,CAAC,MAAM;QACfC,WAAW,CAAC,CAAC;MACf,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EAED,MAAMA,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAAC7D,SAAS,EAAE;MACd;MACAF,aAAa,CAACgE,OAAO,CAAC/C,IAAI,IAAI;QAC5B,IAAIA,IAAI,CAACc,OAAO,EAAE;UAChBC,GAAG,CAACiB,eAAe,CAAChC,IAAI,CAACc,OAAO,CAAC;QACnC;MACF,CAAC,CAAC;MAEF9B,gBAAgB,CAAC,EAAE,CAAC;MACpBI,iBAAiB,CAAC,CAAC,CAAC,CAAC;MACrBE,gBAAgB,CAAC,EAAE,CAAC;MACpBE,QAAQ,CAAC,EAAE,CAAC;MACZb,OAAO,CAAC,CAAC;IACX;EACF,CAAC;EAED,MAAMqE,aAAa,GAAI/B,MAAM,IAAK;IAChC,QAAQA,MAAM;MACZ,KAAK,SAAS;QACZ,oBAAOzC,OAAA,CAACR,WAAW;UAACiF,KAAK,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACxC,KAAK,OAAO;QACV,oBAAO7E,OAAA,CAACN,SAAS;UAAC+E,KAAK,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACpC,KAAK,WAAW;QACd,oBAAO7E,OAAA,CAACf,cAAc;UAAC6F,EAAE,EAAE;YAAEC,KAAK,EAAE,EAAE;YAAEC,MAAM,EAAE;UAAG;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC1D;QACE,oBAAO7E,OAAA,CAACT,YAAY;UAACkF,KAAK,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;IAC1C;EACF,CAAC;EAED,MAAMI,cAAc,GAAIxC,MAAM,IAAK;IACjC,QAAQA,MAAM;MACZ,KAAK,SAAS;QACZ,OAAO,SAAS;MAClB,KAAK,OAAO;QACV,OAAO,OAAO;MAChB,KAAK,WAAW;QACd,OAAO,SAAS;MAClB;QACE,OAAO,SAAS;IACpB;EACF,CAAC;EAED,oBACEzC,OAAA,CAAC3B,MAAM;IACL6B,IAAI,EAAEA,IAAK;IACXC,OAAO,EAAEmE,WAAY;IACrBY,QAAQ,EAAC,IAAI;IACbC,SAAS;IACTC,UAAU,EAAE;MACVN,EAAE,EAAE;QAAEO,YAAY,EAAE,CAAC;QAAEC,SAAS,EAAE;MAAI;IACxC,CAAE;IAAAC,QAAA,gBAEFvF,OAAA,CAAC1B,WAAW;MAAAiH,QAAA,eACVvF,OAAA,CAACtB,GAAG;QAACoG,EAAE,EAAE;UAAEU,OAAO,EAAE,MAAM;UAAEC,UAAU,EAAE,QAAQ;UAAEC,GAAG,EAAE;QAAE,CAAE;QAAAH,QAAA,gBACzDvF,OAAA,CAACX,WAAW;UAACoF,KAAK,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/B7E,OAAA,CAACrB,UAAU;UAACgH,OAAO,EAAC,IAAI;UAACC,SAAS,EAAC,MAAM;UAAAL,QAAA,GAAC,qBACtB,EAAClF,UAAU,EAAC,IAChC;QAAA;UAAAqE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,eAEd7E,OAAA,CAACzB,aAAa;MAAAgH,QAAA,GAEXxE,KAAK,iBACJf,OAAA,CAACd,KAAK;QAAC2G,QAAQ,EAAC,OAAO;QAACf,EAAE,EAAE;UAAEgB,EAAE,EAAE,CAAC;UAAET,YAAY,EAAE;QAAE,CAAE;QAAAE,QAAA,EACpDxE,KAAK,CAACgF,KAAK,CAAC,IAAI,CAAC,CAACxE,GAAG,CAAC,CAACyE,IAAI,EAAEC,KAAK,kBACjCjG,OAAA;UAAAuF,QAAA,EAAkBS;QAAI,GAAZC,KAAK;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAC7B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CACR,EAGApE,SAAS,iBACRT,OAAA,CAACtB,GAAG;QAACoG,EAAE,EAAE;UAAEgB,EAAE,EAAE;QAAE,CAAE;QAAAP,QAAA,gBACjBvF,OAAA,CAACrB,UAAU;UAACgH,OAAO,EAAC,OAAO;UAACO,YAAY;UAAAX,QAAA,GAAC,YAC7B,EAAC5E,cAAc,CAACqD,SAAS,EAAC,MAAI,EAACrD,cAAc,CAACsD,KAAK,EAAC,WAChE;QAAA;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACb7E,OAAA,CAACf,cAAc;UACb0G,OAAO,EAAC,aAAa;UACrBQ,KAAK,EAAGxF,cAAc,CAACqD,SAAS,GAAGrD,cAAc,CAACsD,KAAK,GAAI,GAAI;UAC/Da,EAAE,EAAE;YAAEE,MAAM,EAAE,CAAC;YAAEK,YAAY,EAAE;UAAE;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN,EAGA,CAACpE,SAAS,iBACTT,OAAA,CAACZ,KAAK;QAAA,GACAuD,YAAY,CAAC,CAAC;QAClByD,SAAS,EAAE,yBAAyBvD,YAAY,GAAG,aAAa,GAAG,EAAE,EAAG;QACxEiC,EAAE,EAAE;UAAEgB,EAAE,EAAE;QAAE,CAAE;QAAAP,QAAA,gBAEdvF,OAAA;UAAA,GAAW4C,aAAa,CAAC;QAAC;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC9B7E,OAAA,CAACX,WAAW;UAACyF,EAAE,EAAE;YAAEuB,QAAQ,EAAE,EAAE;YAAE5B,KAAK,EAAE,cAAc;YAAEqB,EAAE,EAAE;UAAE;QAAE;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnE7E,OAAA,CAACrB,UAAU;UAACgH,OAAO,EAAC,IAAI;UAACO,YAAY;UAAAX,QAAA,EAClC1C,YAAY,GAAG,kBAAkB,GAAG;QAAyB;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC,eACb7E,OAAA,CAACrB,UAAU;UAACgH,OAAO,EAAC,OAAO;UAAClB,KAAK,EAAC,gBAAgB;UAAC6B,SAAS;UAAAf,QAAA,EAAC;QAE7D;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACb7E,OAAA,CAACtB,GAAG;UAACoG,EAAE,EAAE;YAAEU,OAAO,EAAE,MAAM;YAAEE,GAAG,EAAE,CAAC;YAAEa,QAAQ,EAAE,MAAM;YAAEC,cAAc,EAAE;UAAS,CAAE;UAAAjB,QAAA,gBAC/EvF,OAAA,CAACb,IAAI;YAACsH,KAAK,EAAC,KAAK;YAACpE,IAAI,EAAC;UAAO;YAAAqC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACjC7E,OAAA,CAACb,IAAI;YAACsH,KAAK,EAAC,KAAK;YAACpE,IAAI,EAAC;UAAO;YAAAqC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACjC7E,OAAA,CAACb,IAAI;YAACsH,KAAK,EAAC,KAAK;YAACpE,IAAI,EAAC;UAAO;YAAAqC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACjC7E,OAAA,CAACb,IAAI;YAACsH,KAAK,EAAC,MAAM;YAACpE,IAAI,EAAC;UAAO;YAAAqC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC,eACN7E,OAAA,CAACrB,UAAU;UAACgH,OAAO,EAAC,SAAS;UAAClB,KAAK,EAAC,gBAAgB;UAACK,EAAE,EAAE;YAAE4B,EAAE,EAAE,CAAC;YAAElB,OAAO,EAAE;UAAQ,CAAE;UAAAD,QAAA,EAAC;QAEtF;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CACR,EAGAtE,aAAa,CAACc,MAAM,GAAG,CAAC,iBACvBrB,OAAA,CAACtB,GAAG;QAAA6G,QAAA,gBACFvF,OAAA,CAACrB,UAAU;UAACgH,OAAO,EAAC,IAAI;UAACO,YAAY;UAAAX,QAAA,GAAC,kBACpB,EAAChF,aAAa,CAACc,MAAM,EAAC,GACxC;QAAA;UAAAqD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACb7E,OAAA,CAACpB,IAAI;UAACkG,EAAE,EAAE;YAAE6B,SAAS,EAAE,GAAG;YAAEC,QAAQ,EAAE;UAAO,CAAE;UAAArB,QAAA,EAC5ChF,aAAa,CAACgB,GAAG,CAAEqC,QAAQ,iBAC1B5D,OAAA,CAACnB,QAAQ;YAEPiG,EAAE,EAAE;cACF+B,MAAM,EAAE,CAAC;cACTC,WAAW,EAAE,SAAS;cACtBzB,YAAY,EAAE,CAAC;cACfS,EAAE,EAAE,CAAC;cACLiB,OAAO,EAAEnD,QAAQ,CAACnB,MAAM,KAAK,SAAS,GAAG,eAAe,GAC/CmB,QAAQ,CAACnB,MAAM,KAAK,OAAO,GAAG,aAAa,GAAG;YACzD,CAAE;YAAA8C,QAAA,gBAEFvF,OAAA,CAACtB,GAAG;cAACoG,EAAE,EAAE;gBAAEkC,EAAE,EAAE;cAAE,CAAE;cAAAzB,QAAA,EAChBf,aAAa,CAACZ,QAAQ,CAACnB,MAAM;YAAC;cAAAiC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B,CAAC,eACN7E,OAAA,CAAClB,YAAY;cACXmI,OAAO,EAAErD,QAAQ,CAAC/B,IAAK;cACvBqF,SAAS,eACPlH,OAAA,CAACtB,GAAG;gBAAA6G,QAAA,gBACFvF,OAAA,CAACrB,UAAU;kBAACgH,OAAO,EAAC,SAAS;kBAAAJ,QAAA,EAC1B3F,cAAc,CAACgE,QAAQ,CAACvB,IAAI;gBAAC;kBAAAqC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACpB,CAAC,EACZjB,QAAQ,CAAC7C,KAAK,iBACbf,OAAA,CAACrB,UAAU;kBAACgH,OAAO,EAAC,SAAS;kBAAClB,KAAK,EAAC,OAAO;kBAACe,OAAO,EAAC,OAAO;kBAAAD,QAAA,EACxD3B,QAAQ,CAAC7C;gBAAK;kBAAA2D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL,CACb;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE;YACN;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC,eACF7E,OAAA,CAACjB,uBAAuB;cAAAwG,QAAA,gBACtBvF,OAAA,CAACb,IAAI;gBACHsH,KAAK,EAAE7C,QAAQ,CAACnB,MAAO;gBACvBJ,IAAI,EAAC,OAAO;gBACZoC,KAAK,EAAEQ,cAAc,CAACrB,QAAQ,CAACnB,MAAM,CAAE;gBACvCqC,EAAE,EAAE;kBAAEkC,EAAE,EAAE;gBAAE;cAAE;gBAAAtC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACf,CAAC,EACD,CAACpE,SAAS,IAAImD,QAAQ,CAACnB,MAAM,KAAK,SAAS,iBAC1CzC,OAAA,CAAChB,UAAU;gBACTmI,IAAI,EAAC,KAAK;gBACV,cAAW,QAAQ;gBACnBC,OAAO,EAAEA,CAAA,KAAMnE,UAAU,CAACW,QAAQ,CAAC5B,EAAE,CAAE;gBACvCK,IAAI,EAAC,OAAO;gBAAAkD,QAAA,eAEZvF,OAAA,CAACV,MAAM;kBAAAoF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CACb;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACsB,CAAC;UAAA,GA7CrBjB,QAAQ,CAAC5B,EAAE;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA8CR,CACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY,CAAC,eAEhB7E,OAAA,CAACxB,aAAa;MAACsG,EAAE,EAAE;QAAEuC,CAAC,EAAE,CAAC;QAAE3B,GAAG,EAAE;MAAE,CAAE;MAAAH,QAAA,gBAClCvF,OAAA,CAACvB,MAAM;QACL2I,OAAO,EAAE9C,WAAY;QACrBqB,OAAO,EAAC,UAAU;QAClB2B,QAAQ,EAAE7G,SAAU;QACpBqE,EAAE,EAAE;UAAEO,YAAY,EAAE;QAAE,CAAE;QAAAE,QAAA,EAEvB1E,aAAa,CAACQ,MAAM,GAAG,CAAC,IAAI,CAACZ,SAAS,GAAG,OAAO,GAAG;MAAQ;QAAAiE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC,eACT7E,OAAA,CAACvB,MAAM;QACL2I,OAAO,EAAE3D,WAAY;QACrBkC,OAAO,EAAC,WAAW;QACnB2B,QAAQ,EAAE/G,aAAa,CAACc,MAAM,KAAK,CAAC,IAAIZ,SAAU;QAClDqE,EAAE,EAAE;UACFO,YAAY,EAAE,CAAC;UACfkC,UAAU,EAAE;QACd,CAAE;QAAAhC,QAAA,EAED9E,SAAS,GAAG,cAAc,GAAG,UAAUF,aAAa,CAACc,MAAM;MAAQ;QAAAqD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEb,CAAC;AAACvE,EAAA,CA7TIL,WAAW;EAAA,QAOSN,SAAS,EAqCqBvB,WAAW;AAAA;AAAAoJ,EAAA,GA5C7DvH,WAAW;AA+TjB,eAAeA,WAAW;AAAC,IAAAuH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}