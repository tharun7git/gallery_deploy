{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8000'; // Update with your Django backend URL\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to include token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor to handle token refresh\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    const refreshToken = localStorage.getItem('refresh_token');\n    if (refreshToken) {\n      try {\n        const response = await axios.post(`${API_BASE_URL}/token/refresh/`, {\n          refresh: refreshToken\n        });\n        localStorage.setItem('access_token', response.data.access);\n        originalRequest.headers.Authorization = `Bearer ${response.data.access}`;\n        return api(originalRequest);\n      } catch (refreshError) {\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('refresh_token');\n        window.location.href = '/login';\n      }\n    }\n  }\n  return Promise.reject(error);\n});\n\n// Auth API calls\nexport const authAPI = {\n  login: credentials => api.post('/token/', credentials),\n  register: userData => api.post('/users/', userData),\n  getCurrentUser: () => api.get('/users/')\n};\n\n// Folders API calls\nexport const foldersAPI = {\n  getFolders: () => api.get('/folders/'),\n  createFolder: folderData => api.post('/folders/', folderData),\n  deleteFolder: folderId => api.delete(`/folders/${folderId}/`),\n  getFolderPhotos: folderId => api.get(`/folders/${folderId}/photos/`)\n};\n\n// Photos API calls\nexport const photosAPI = {\n  uploadPhoto: (folderId, formData) => {\n    return api.post(`/folders/${folderId}/photos/`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  deletePhoto: (folderId, photoId) => api.delete(`/folders/${folderId}/photos/${photoId}/`),\n  getAllPhotos: () => api.get('/folders/'),\n  toggleFavorite: (photoId, isFavorite) => {\n    // You might need to add this endpoint to your Django backend\n    return api.patch(`/photos/${photoId}/`, {\n      is_favorite: isFavorite\n    });\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","originalRequest","status","_retry","refreshToken","post","refresh","setItem","data","access","refreshError","removeItem","window","location","href","authAPI","login","credentials","register","userData","getCurrentUser","get","foldersAPI","getFolders","createFolder","folderData","deleteFolder","folderId","delete","getFolderPhotos","photosAPI","uploadPhoto","formData","deletePhoto","photoId","getAllPhotos","toggleFavorite","isFavorite","patch","is_favorite"],"sources":["C:/Users/91970/Desktop/project/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8000'; // Update with your Django backend URL\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add request interceptor to include token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('access_token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor to handle token refresh\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n    \r\n    if (error.response?.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n      \r\n      const refreshToken = localStorage.getItem('refresh_token');\r\n      if (refreshToken) {\r\n        try {\r\n          const response = await axios.post(`${API_BASE_URL}/token/refresh/`, {\r\n            refresh: refreshToken,\r\n          });\r\n          \r\n          localStorage.setItem('access_token', response.data.access);\r\n          originalRequest.headers.Authorization = `Bearer ${response.data.access}`;\r\n          \r\n          return api(originalRequest);\r\n        } catch (refreshError) {\r\n          localStorage.removeItem('access_token');\r\n          localStorage.removeItem('refresh_token');\r\n          window.location.href = '/login';\r\n        }\r\n      }\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API calls\r\nexport const authAPI = {\r\n  login: (credentials) => api.post('/token/', credentials),\r\n  register: (userData) => api.post('/users/', userData),\r\n  getCurrentUser: () => api.get('/users/'),\r\n};\r\n\r\n// Folders API calls\r\nexport const foldersAPI = {\r\n  getFolders: () => api.get('/folders/'),\r\n  createFolder: (folderData) => api.post('/folders/', folderData),\r\n  deleteFolder: (folderId) => api.delete(`/folders/${folderId}/`),\r\n  getFolderPhotos: (folderId) => api.get(`/folders/${folderId}/photos/`),\r\n};\r\n\r\n// Photos API calls\r\nexport const photosAPI = {\r\n  uploadPhoto: (folderId, formData) => {\r\n    return api.post(`/folders/${folderId}/photos/`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  },\r\n  deletePhoto: (folderId, photoId) => api.delete(`/folders/${folderId}/photos/${photoId}/`),\r\n  getAllPhotos: () => api.get('/folders/'),\r\n  toggleFavorite: (photoId, isFavorite) => {\r\n    // You might need to add this endpoint to your Django backend\r\n    return api.patch(`/photos/${photoId}/`, { is_favorite: isFavorite });\r\n  },\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}